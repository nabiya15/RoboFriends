{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","id","name","email","className","src","alt","CardList","cardComponent","robots","map","user","i","SearchBox","searchField","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","margin","padding","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","React","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4NAceA,EAZF,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,GAAIC,EAAgB,EAAhBA,KAAMC,EAAU,EAAVA,MACrB,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAG,+BAA0BJ,EAA1B,YAAwCK,IAAI,UACpD,gCACI,6BAAKJ,IACL,4BAAIC,WCcLI,EAlBE,SAAC,GAAc,IACtBC,EADqB,EAAZC,OACaC,KAAI,SAACC,EAAMC,GACnC,OACI,cAAC,EAAD,CAEIX,GAAIU,EAAKV,GACTC,KAAMS,EAAKT,KACXC,MAAOQ,EAAKR,OAHPS,MAOjB,OACI,8BACKJ,KCDEK,EAdG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAC/B,OACE,8BACE,uBACEX,UAAU,mCACVY,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCAHI,EAPD,SAACC,GACX,OACI,qBAAKC,MAAO,CAACC,UAAU,SAAUC,OAAO,kBAAmBC,OAAO,OAAQC,OAAO,SAAUC,QAAQ,QAAnG,SACKN,EAAMO,YCeJC,E,kDAjBX,WAAYR,GAAO,IAAD,8BACd,cAAMA,IACDS,MAAO,CACRC,UAAU,GAHA,E,qDAMlB,SAAkBC,EAAOC,GACrBC,KAAKC,SAAS,CAACJ,UAAS,M,oBAE5B,WACI,OAAGG,KAAKJ,MAAMC,SACH,sDAEJG,KAAKb,MAAMO,a,GAdCQ,aC6CZC,E,kDAxCX,aAAc,IAAD,8BACT,gBAYJC,eAAgB,SAACC,GACb,EAAKJ,SAAS,CAACpB,YAAYwB,EAAMC,OAAOC,SAZxC,EAAKX,MAAM,CACPpB,OAAQ,GACRK,YAAa,IAJR,E,qDAOb,WAAoB,IAAD,OACf2B,MAAM,8CACDC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAK,OAAG,EAAKX,SAAS,CAACzB,OAAQoC,S,oBAO7C,WAAS,IAAD,EAC0BZ,KAAKJ,MAA5BpB,EADH,EACGA,OAAQK,EADX,EACWA,YACTgC,EAAiBrC,EAAOsC,QAAO,SAAAC,GACjC,OAAOA,EAAM9C,KAAK+C,cAAcC,SAASpC,EAAYmC,kBAEzD,OAAQxC,EAAO0C,OAGH,sBAAK/C,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWW,aAAgBkB,KAAKI,iBAChC,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAU5B,OAAQqC,WAPlC,gD,GAxBEM,IAAMjB,WCMTkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.598f6889.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({id, name, email})=> {\r\n    return(\r\n        <div className=\"bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5 tc\">\r\n            <img src={`https://robohash.org/${id}?200x200`} alt='robot'></img>\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\n\r\nconst CardList = ({robots}) => {\r\n    const cardComponent= robots.map((user, i) =>{\r\n        return( \r\n            <Card \r\n                key={i} \r\n                id={user.id} \r\n                name={user.name} \r\n                email={user.email} \r\n            />\r\n        )\r\n    })\r\n    return (\r\n        <div>\r\n            {cardComponent}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardList;","import React from \"react\";\r\n\r\nconst SearchBox = ({searchField, searchChange}) => {\r\n  return (\r\n    <div>\r\n      <input \r\n        className='pa3 ba b--green bg-lightest-blue'\r\n        type=\"search\" \r\n        placeholder=\"Search Robots\"\r\n        onChange={searchChange}   \r\n    \r\n    />    \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React from 'react';\r\n\r\nconst Scroll =(props)=>{\r\n    return (\r\n        <div style={{overflowY:'scroll', border:'1px solid black', height:'80vh', margin:'10px 0', padding:'10px'}}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\nexport default Scroll;\r\n","import React,{Component} from 'react';\r\n\r\nclass ErrorBoundry extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state= {\r\n            hasError: false\r\n        }\r\n    }\r\n    componentDidCatch(error, info){\r\n        this.setState({hasError:true})\r\n    }\r\n    render(){\r\n        if(this.state.hasError){\r\n            return <h1>Ooops, we hit a snag</h1>\r\n        }\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default ErrorBoundry;","import React from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundry from '../components/ErrorBoundry';\r\n\r\nclass App extends React.Component{\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            robots: [],\r\n            searchField: ''\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n            .then(response=> response.json())\r\n            .then(users=> this.setState({robots: users}))  \r\n    }\r\n\r\n    onSearchChange= (event) => {\r\n        this.setState({searchField:event.target.value})\r\n    }\r\n\r\n    render(){\r\n        const {robots, searchField} = this.state;\r\n        const filteredRobots = robots.filter(robot => {\r\n            return robot.name.toLowerCase().includes(searchField.toLowerCase());\r\n        })\r\n        return !robots.length ?\r\n                <h1>Loading...</h1>:\r\n                (\r\n                    <div className=\"tc\">\r\n                        <h1 className='f1'>RoboFriends</h1>\r\n                        <SearchBox searchChange = {this.onSearchChange}/>\r\n                        <Scroll>\r\n                            <ErrorBoundry>\r\n                                <CardList robots={filteredRobots}/>\r\n                            </ErrorBoundry>\r\n                            \r\n                        </Scroll>\r\n                    </div>\r\n                 )\r\n        }\r\n}\r\n\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'tachyons';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/> \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}